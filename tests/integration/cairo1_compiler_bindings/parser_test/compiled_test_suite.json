{
  "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
  "bytecode": [
    "0x1104800180018000",
    "0xf",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x24",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x4c",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x87",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x9e",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0xb1",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffd7fff8000",
    "0x48127ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0x99",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x9",
    "0x40780017fff7fff",
    "0x9",
    "0x480680017fff8000",
    "0x1",
    "0x48127ff47fff8000",
    "0x48127ff47fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0x86",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffd7fff8000",
    "0x48127ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0x6e",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x9",
    "0x40780017fff7fff",
    "0x12",
    "0x480680017fff8000",
    "0x1",
    "0x48127feb7fff8000",
    "0x48127feb7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0x5b",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x9",
    "0x40780017fff7fff",
    "0x9",
    "0x480680017fff8000",
    "0x1",
    "0x48127ff47fff8000",
    "0x48127ff47fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x2",
    "0x1104800180018000",
    "0x48",
    "0x20680017fff7ffd",
    "0x6",
    "0x10780017fff7fff",
    "0x2",
    "0x10780017fff7fff",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffd7fff8000",
    "0x48127ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x74657374",
    "0x40780017fff7fff",
    "0x1",
    "0xa0680017fff7fff",
    "0x6",
    "0x40780017fff7fff",
    "0x1",
    "0x10780017fff7fff",
    "0xb",
    "0x40780017fff7fff",
    "0x1",
    "0x400080007fff7ffd",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffe7fff8000",
    "0x482480017ffd8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x7b",
    "0x480680017fff8000",
    "0x7b",
    "0xa0680017fff8000",
    "0x6",
    "0x40780017fff7fff",
    "0x1",
    "0x10780017fff7fff",
    "0xb",
    "0x40780017fff7fff",
    "0x1",
    "0x400080007fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffe7fff8000",
    "0x482480017ffd8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0xa0680017fff8000",
    "0x6",
    "0x40780017fff7fff",
    "0x1",
    "0x10780017fff7fff",
    "0xb",
    "0x40780017fff7fff",
    "0x1",
    "0x400080007fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffe7fff8000",
    "0x482480017ffd8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x208b7fff7fff7ffe"
  ],
  "hints": [
    [
      146,
      [
        "r = declare(contract=[ap + -1]);\nmemory[ap + 0] = r.err_code\nmemory[ap + 1] = 0 if r.err_code != 0 else r.ok.class_hash\n"
      ]
    ],
    [
      154,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      174,
      [
        "memory[ap + 0] = start_prank(caller_address=[ap + -2], target_contract_address=[ap + -1]).err_code;\n"
      ]
    ],
    [
      180,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      196,
      [
        "memory[ap + 0] = roll(address=[fp + -4], caller_address=[fp + -3]).err_code; \n"
      ]
    ],
    [
      202,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ]
  ],
  "test_entry_points": [
    {
      "offset": 0,
      "name": "cheatcode_test::cheatcode_test::test_cheatcode_caller"
    },
    {
      "offset": 3,
      "name": "cheatcode_test::cheatcode_test::test_cheatcode_caller_twice"
    },
    {
      "offset": 6,
      "name": "cheatcode_test::cheatcode_test::test_cheatcode_caller_three"
    },
    {
      "offset": 9,
      "name": "cheatcode_test::cheatcode_test::test_declare"
    },
    {
      "offset": 12,
      "name": "cheatcode_test::cheatcode_test::test_start_prank"
    }
  ]
}