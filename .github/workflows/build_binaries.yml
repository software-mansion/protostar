name: Build binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9.14
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.14

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry export -o requirements.txt
          pip install -r requirements.txt

      - name: Build binary
        run: |
          poetry run poe build

      - name: Pack binary into a tarball
        run: tar -czvf protostar.tar.gz ./dist/protostar

      - name: Upload the tarball
        uses: actions/upload-artifact@v2
        with:
          name: protostar-${{ runner.os }}
          path: protostar.tar.gz
  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Upload macOS binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/protostar-macOS/protostar.tar.gz
          asset_name: protostar-macOS.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ endsWith(github.ref, 'pre-release') }}

      - name: Upload Linux binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/protostar-Linux/protostar.tar.gz
          asset_name: protostar-Linux.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ endsWith(github.ref, 'pre-release') }}
