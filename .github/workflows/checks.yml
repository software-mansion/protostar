name: Static analysis and tests

on:
  push:
    branches:
      - master
      - development
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    name: Download deps, install poetry, populate caches
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry, and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Populate caches
        uses: actions/cache@v3
        with:
          path: | 
            ~/.cache/pypoetry
          key: poetry-${{ hashFiles('poetry.lock') }}

  lint:
    name: Check formatting, linting and types
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: | 
            ~/.cache/pypoetry
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: Check types
        run: |
          poetry run poe type_check
      - name: Check formatting with black
        run: |
          poetry run poe format_check
      - name: Analyzing the code with pylint
        run: |
          poetry run poe lint

  unit-and-integration-tests:
    name: Unit and integration tests + coverage upload
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: Unit tests
        run: |
          poetry run poe test_unit
      - name: Integration tests
        run: |
          poetry run poe test_integration
      - name: Convert coverage to XML
        run: |
          poetry run python -m coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  e2e-tests:
    name: End-to-end tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: Build
        run: |
          poetry run poe build
      - name: E2E tests
        run: |
          poetry run poe test_e2e