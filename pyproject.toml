[tool.poetry]
authors = [
    "tomasz.rejowski <tomasz.rejowski@swmansion.com>",
]
description = "Toolchain for developing, testing and interacting with Cairo contracts for StarkNet"
license = "MIT"
name = "protostar"
readme = "README.md"
repository = "https://github.com/software-mansion/protostar"
version = "0.9.1"

[tool.poetry.dependencies]
argparse = "^1.4.0"
cairo-lang = "0.10.3"
colorama = "^0.4.6"
crypto-cpp-py = "^1.0.4"
flatdict = "^4.0.1"
hypothesis = "^6.68.1"
packaging = "^23.0"
pytest-datadir = "^1.4.1"
python = ">=3.9.14, <3.10"
requests = "^2.28.2"
starknet-py = "0.14.0a0"
tomli = "<2.0.0"
tomli-w = "^1.0.0"
tqdm = "^4.64.1"
typing-extensions = "^4.3.0"
tomlkit = "^0.11.6"

[tool.poetry.dev-dependencies]
GitPython = "^3.1.29"
black = "^23.1.0"
freezegun = "^1.2.1"
pexpect = "^4.8.0"
poethepoet = "^0.18.1"
pyinstaller = "^5.7"
pylint = "^2.15.10"
pyright = "^1.1.292"
pytest = "^7.2.1"
pytest-datadir = "^1.4.1"
pytest-mock = "^3.10.0"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.1.0"
re-assert = "^1.1.0"
snakeviz = "^2.1.1"
starknet-devnet = "^0.4.4"
pytest-random-order = "^1.1.0"

[tool.poe.tasks]
build = [
    "write_runtime_constants",
    "pyinstaller",
]
write_runtime_constants = "python ./scripts/write_runtime_constants.py"
pyinstaller = "pyinstaller protostar.spec --noconfirm"
ci = [
    "type_check",
    "lint",
    "format_check",
    "custom_checks",
    "test",
]
custom_checks = "sh ./scripts/custom_checks.sh"
deploy = "python ./scripts/deploy.py"
deploy_prerelease = "python ./scripts/deploy_prerelease.py"
devnet = "starknet-devnet --seed 0"
format = "black ."

format_check = "./scripts/run_format_check.sh"
lint = "./scripts/run_lint.sh"

format_check_selected = "black --check"
lint_selected = "pylint"

local_static_check = [
    "format",
    "lint",
    "type_check",
    "custom_checks",
]
profile = "python -m cProfile -o recent_profiling.prof protostar.py"
show_prof = "snakeviz recent_profiling.prof"
test = [
    "test_unit",
    "test_integration",
    "build",
    "test_e2e",
]
test_cairo = "python ./binary_entrypoint.py test"
type_check = "pyright"
update_cli_docs = "python ./scripts/generate_reference_docs.py"

[tool.poe.tasks.test_e2e]
shell = "pytest -n auto tests/e2e"

[tool.poe.tasks.test_integration]
shell = "pytest -n auto --random-order scripts tests/integration"

[tool.poe.tasks.test_unit]
shell = "pytest -n auto protostar/*"

[tool.black]
target-version = [
    "py39",
]

[tool.isort]
profile = "black"
lines_between_sections = 1
only_sections = true

[tool.pyright]
exclude = [
    "**/__pycache__",
    "./.venv",
    "./playground",
]
reportCallInDefaultInitializer = true
reportConstantRedefinition = true
reportDuplicateImport = true
reportFunctionMemberAccess = true
reportImportCycles = false
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportInvalidStubStatement = true
reportMatchNotExhaustive = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportTypeCommentUsage = true
reportUninitializedInstanceVariable = true
reportUnknownLambdaType = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryIsInstance = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
reportUnusedClass = true
reportIncompatibleMethodOverride = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
useLibraryCodeForTypes = true
reportMissingParameterType = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core>=1.0.0",
]
