[tool.poetry]
authors = [
    "tomasz.rejowski <tomasz.rejowski@swmansion.com>",
]
description = "Toolchain for developing, testing and interacting with Cairo contracts for StarkNet"
license = "MIT"
name = "protostar"
readme = "README.md"
repository = "https://github.com/software-mansion/protostar"
version = "0.3.2"

[tool.poetry.dependencies]
GitPython = "^3.1.26"
argparse = "^1.4.0"
cairo-lang = "^0.10.0"
colorama = "^0.4.5"
crypto-cpp-py = "^1.0.4"
flatdict = "^4.0.1"
hypothesis = "^6.49.1"
packaging = "^21.3"
pytest-datadir = "^1.3.1"
python = ">=3.9.13, <3.10"
requests = "^2.27.1"
starknet-py = "^0.5.2a0"
tomli = "<2.0.0"
tomli-w = "^1.0.0"
tqdm = "^4.64.1"
typing-extensions = "^4.3.0"

[tool.poetry.dev-dependencies]
black = "^22.8.0"
coverage = "^6.4.4"
pexpect = "^4.8.0"
poethepoet = "^0.16.2"
pyinstaller = "^5.3"
pylint = "^2.12.2"
pyright = "^1.1.269"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-datadir = "^1.3.1"
pytest-mock = "^3.7.0"
pytest-timeout = "^2.1.0"
snakeviz = "^2.1.1"
starknet-devnet = "^0.3.0"
pytest-benchmark = "^3.4.1"
freezegun = "^1.2.1"

[tool.poe.tasks]
build = "pyinstaller protostar.spec --noconfirm"
ci = [
    "type_check",
    "lint",
    "format_check",
    "custom_checks",
    "test",
]
cov = "pytest --cov-report xml:cov.xml --cov=protostar"
custom_checks = "sh ./scripts/custom_checks.sh"
deploy = "python ./scripts/deploy.py"
deploy_prerelease = "python ./scripts/deploy_prerelease.py"
format = "black ."
format_check = "black --check protostar"
lint = "pylint protostar"
local_static_check = [
    "format",
    "lint",
    "type_check",
    "custom_checks",
]
profile = "python -m cProfile -o recent_profiling.prof protostar.py"
show_prof = "snakeviz recent_profiling.prof"
test = [
    "test_unit",
    "test_integration",
    "build",
    "test_e2e",
]
test_cairo = "python ./binary_entrypoint.py test"
test_html = [
    { shell = "coverage html && open ./htmlcov/index.html" },
]
test_report = [
    { shell = "coverage report" },
]
type_check = "pyright"
update_cli_docs = "python ./scripts/generate_reference_docs.py"

[tool.poe.tasks.benchmark]
shell = "pytest tests/benchmarks --benchmark-save-data --benchmark-autosave"

[tool.poe.tasks.statistical_test]
shell = "python ./tests/benchmarks/statistical_test.py"

[tool.poe.tasks.test_e2e]
shell = "pytest tests/e2e"

[tool.poe.tasks.test_integration]
shell = "coverage run -a -m pytest scripts tests/integration"

[tool.poe.tasks.test_unit]
shell = "coverage run -m pytest protostar/*"

[tool.coverage.run]
source = [
    "protostar",
]

[tool.coverage.report]
skip_empty = true

[tool.black]
target-version = [
    "py39",
]

[tool.isort]
lines_between_sections = 1
profile = "black"

[tool.pyright]
exclude = [
    "**/__pycache__",
    "./.venv",
    "./playground",
]
reportCallInDefaultInitializer = true
reportConstantRedefinition = true
reportDuplicateImport = true
reportFunctionMemberAccess = true
reportImportCycles = false
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportInvalidStubStatement = true
reportMatchNotExhaustive = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportTypeCommentUsage = true
reportUninitializedInstanceVariable = true
reportUnknownLambdaType = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryIsInstance = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
reportUnusedClass = true
reportIncompatibleMethodOverride = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
useLibraryCodeForTypes = true

[tool.protostar]
latest_supported_protostar_toml_version = "0.3.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core>=1.0.0",
]
